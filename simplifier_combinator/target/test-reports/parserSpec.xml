<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="ubuntu" name="parserSpec" tests="19" errors="2" failures="0" time="-0.019">
                <properties> <property name="jline.esc.timeout" value="0"/><property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/><property name="sun.boot.library.path" value="/usr/lib/jvm/java-8-oracle/jre/lib/amd64"/><property name="java.vm.version" value="25.66-b17"/><property name="java.vm.vendor" value="Oracle Corporation"/><property name="java.vendor.url" value="http://java.oracle.com/"/><property name="path.separator" value=":"/><property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/><property name="file.encoding.pkg" value="sun.io"/><property name="user.country" value="US"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="sun.os.patch.level" value="unknown"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="user.dir" value="/home/grzegorz/Desktop/projekt/0/pytKom05/simplifier_combinator"/><property name="java.runtime.version" value="1.8.0_66-b17"/><property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/><property name="java.endorsed.dirs" value="/usr/lib/jvm/java-8-oracle/jre/lib/endorsed"/><property name="os.arch" value="amd64"/><property name="java.io.tmpdir" value="/tmp"/><property name="line.separator" value="
"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="os.name" value="Linux"/><property name="sun.jnu.encoding" value="UTF-8"/><property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib"/><property name="java.specification.name" value="Java Platform API Specification"/><property name="java.class.version" value="52.0"/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="os.version" value="3.19.0-30-generic"/><property name="user.home" value="/home/grzegorz"/><property name="user.timezone" value="America/Los_Angeles"/><property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/><property name="file.encoding" value="UTF-8"/><property name="java.specification.version" value="1.8"/><property name="java.class.path" value="/usr/share/sbt-launcher-packaging/bin/sbt-launch.jar"/><property name="user.name" value="grzegorz"/><property name="jline.shutdownhook" value="false"/><property name="java.vm.specification.version" value="1.8"/><property name="sun.java.command" value="/usr/share/sbt-launcher-packaging/bin/sbt-launch.jar test"/><property name="java.home" value="/usr/lib/jvm/java-8-oracle/jre"/><property name="sun.arch.data.model" value="64"/><property name="user.language" value="en"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="awt.toolkit" value="sun.awt.X11.XToolkit"/><property name="java.vm.info" value="mixed mode"/><property name="java.version" value="1.8.0_66"/><property name="java.ext.dirs" value="/usr/lib/jvm/java-8-oracle/jre/lib/ext:/usr/java/packages/lib/ext"/><property name="sun.boot.class.path" value="/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/classes"/><property name="java.vendor" value="Oracle Corporation"/><property name="file.separator" value="/"/><property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/><property name="sun.io.unicode.encoding" value="UnicodeLittle"/><property name="sun.cpu.endian" value="little"/><property name="sun.desktop" value="gnome"/><property name="sun.cpu.isalist" value=""/>
        </properties>
                <testcase classname="parserSpec" name="(It is not a test)" time="-0.001"> 
                    </testcase><testcase classname="parserSpec" name="(It is not a test)" time="-0.001"> 
                    </testcase><testcase classname="parserSpec" name="(It is not a test)" time="-0.001"> 
                    </testcase><testcase classname="parserSpec" name="(It is not a test)" time="-0.001"> 
                    </testcase><testcase classname="parserSpec" name="(It is not a test)" time="-0.001"> <error message="(BinExpr(**,BinExpr(+,Variable(x),Variable(y)),IntNum(2)),BinExpr(**,Variable(x),IntNum(2))) (of class scala.Tuple2)" type="scala.MatchError">scala.MatchError: (BinExpr(**,BinExpr(+,Variable(x),Variable(y)),IntNum(2)),BinExpr(**,Variable(x),IntNum(2))) (of class scala.Tuple2)
	at simplifier.SimplifyBinExpr$.apply(SimplifyBinExpr.scala:93)
	at simplifier.Simplifier$.simplify(simplifier.scala:40)
	at simplifier.Simplifier$.apply(simplifier.scala:9)
	at simplifier.SimplifyBinExpr$.apply(SimplifyBinExpr.scala:93)
	at simplifier.Simplifier$.simplify(simplifier.scala:40)
	at simplifier.SimplifyNodeList$$anonfun$apply$1.apply(SimplifyNodeList.scala:11)
	at simplifier.SimplifyNodeList$$anonfun$apply$1.apply(SimplifyNodeList.scala:11)
	at simplifier.SimplifyNodeList$.apply(SimplifyNodeList.scala:11)
	at simplifier.Simplifier$.simplify(simplifier.scala:45)
	at parserSpec.parseString(Specs.scala:15)
	at parserSpec$$anonfun$2$$anonfun$apply$33$$anonfun$apply$48.apply(Specs.scala:78)
	at parserSpec$$anonfun$2$$anonfun$apply$33$$anonfun$apply$48.apply(Specs.scala:78)
	at parserSpec$$anonfun$2$$anonfun$apply$33.apply(Specs.scala:78)
	at parserSpec$$anonfun$2$$anonfun$apply$33.apply(Specs.scala:70)
</error>
                    </testcase><testcase classname="parserSpec" name="(It is not a test)" time="-0.001"> 
                    </testcase><testcase classname="parserSpec" name="(It is not a test)" time="-0.001"> <error message="(Variable(x),Variable(z)) (of class scala.Tuple2)" type="scala.MatchError">scala.MatchError: (Variable(x),Variable(z)) (of class scala.Tuple2)
	at simplifier.SimplifyBinExpr$.apply(SimplifyBinExpr.scala:93)
	at simplifier.Simplifier$.simplify(simplifier.scala:40)
	at simplifier.Simplifier$.apply(simplifier.scala:9)
	at simplifier.SimplifyBinExpr$.apply(SimplifyBinExpr.scala:206)
	at simplifier.Simplifier$.simplify(simplifier.scala:40)
	at simplifier.SimplifyNodeList$$anonfun$apply$1.apply(SimplifyNodeList.scala:11)
	at simplifier.SimplifyNodeList$$anonfun$apply$1.apply(SimplifyNodeList.scala:11)
	at simplifier.SimplifyNodeList$.apply(SimplifyNodeList.scala:11)
	at simplifier.Simplifier$.simplify(simplifier.scala:45)
	at parserSpec.parseString(Specs.scala:15)
	at parserSpec$$anonfun$2$$anonfun$apply$59$$anonfun$apply$70.apply(Specs.scala:94)
	at parserSpec$$anonfun$2$$anonfun$apply$59$$anonfun$apply$70.apply(Specs.scala:94)
	at parserSpec$$anonfun$2$$anonfun$apply$59.apply(Specs.scala:94)
	at parserSpec$$anonfun$2$$anonfun$apply$59.apply(Specs.scala:88)
</error>
                    </testcase><testcase classname="parserSpec" name="(It is not a test)" time="-0.001"> 
                    </testcase><testcase classname="parserSpec" name="(It is not a test)" time="-0.001"> 
                    </testcase><testcase classname="parserSpec" name="(It is not a test)" time="-0.001"> 
                    </testcase><testcase classname="parserSpec" name="(It is not a test)" time="-0.001"> 
                    </testcase><testcase classname="parserSpec" name="(It is not a test)" time="-0.001"> 
                    </testcase><testcase classname="parserSpec" name="(It is not a test)" time="-0.001"> 
                    </testcase><testcase classname="parserSpec" name="(It is not a test)" time="-0.001"> 
                    </testcase><testcase classname="parserSpec" name="(It is not a test)" time="-0.001"> 
                    </testcase><testcase classname="parserSpec" name="(It is not a test)" time="-0.001"> 
                    </testcase><testcase classname="parserSpec" name="(It is not a test)" time="-0.001"> 
                    </testcase><testcase classname="parserSpec" name="(It is not a test)" time="-0.001"> 
                    </testcase><testcase classname="parserSpec" name="(It is not a test)" time="-0.001"> 
                    </testcase>
                <system-out></system-out>
                <system-err></system-err>
                </testsuite>